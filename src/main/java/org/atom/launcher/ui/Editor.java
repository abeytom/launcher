/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.atom.launcher.ui;

import org.apache.log4j.Logger;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;
import java.util.Properties;
import java.util.Set;

import static javax.swing.KeyStroke.getKeyStroke;

/**
 *
 * @author abey.tom
 */
public class Editor extends javax.swing.JDialog {

    public static final Logger LOGGER = Logger.getLogger(Editor.class);
    public static final String ESCAPE_PRESSED = "org.atom.launcher.ui.Editor:ESCAPE_PRESSED";
    private Properties commands;
    private Properties paths;

    /**
     * Creates new form Editor
     */
    public Editor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initListeners();
    }


    public Editor(Properties commands, Properties paths) {
        this(null,true);
        this.commands = commands;
        this.paths = paths;
        initData();
    }

    private void initData() {
        populateTable(commandTable,commands);
        populateTable(pathTable,paths);
    }

    private void populateTable(Table table, Properties props) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Set<Object> keys = props.keySet();
        for (Object key : keys) {
            model.addRow(new Object[]{key, props.get(key)});
        }
    }

    private void initListeners() {
        JRootPane root = getRootPane();
        //Escape Press
        KeyStroke escape = getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        root.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(escape,
                ESCAPE_PRESSED);
        root.getActionMap().put(ESCAPE_PRESSED, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                cancelButtonActionPerformed(null);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        addRowButton = new javax.swing.JButton();
        tabbledPane = new javax.swing.JTabbedPane();
        commandTabSP = new javax.swing.JScrollPane();
        commandTable = new org.atom.launcher.ui.Table();
        pathTabScrollPane = new javax.swing.JScrollPane();
        pathTable = new org.atom.launcher.ui.Table();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addRowButton.setText("Add Row");
        addRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowButtonActionPerformed(evt);
            }
        });

        commandTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alias", "Command"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        commandTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        commandTabSP.setViewportView(commandTable);

        tabbledPane.addTab("Command Aliases", commandTabSP);

        pathTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alias", "Path"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        pathTabScrollPane.setViewportView(pathTable);

        tabbledPane.addTab("Path Aliases", pathTabScrollPane);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(addRowButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(cancelButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(saveButton))
                    .add(tabbledPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(tabbledPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(cancelButton)
                        .add(addRowButton))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(saveButton)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowButtonActionPerformed
        int selectedIndex = tabbledPane.getSelectedIndex();
        if(selectedIndex==0){
            addRow(commandTable);
        }else if(selectedIndex==1){
            addRow(pathTable);
        }
    }//GEN-LAST:event_addRowButtonActionPerformed

    private void addRow(Table table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.addRow(new String[]{"",""});
    }

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        boolean commandsChanged = commandTable.getRowCount() != commands.size();
        boolean pathsChanged = pathTable.getRowCount() != paths.size();
        if(commandsChanged || pathsChanged){
            int result = JOptionPane.showConfirmDialog(this, "There are some changes, are you sure you want to cancel without saving?");
            if(result == JOptionPane.YES_OPTION){
                this.dispose();
            }
        }else{
            this.dispose();
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        save(commandTable,commands, Launcher.FILE_COMMAND_PROP);
        save(pathTable,paths,Launcher.FILE_PATH_PROP);
        this.dispose();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void save(Table table, Properties props, String fileName) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        props.clear();
        for (int i = 0; i < model.getRowCount(); i++) {
            String key = (String) model.getValueAt(i, 0);
            String value = (String) model.getValueAt(i, 1);
            if(hasText(key) && hasText(value)){
                props.setProperty(key,value);
            }
        }
        File outFile = new File(Launcher.getApplicationHomeDir(), fileName);
        try {
            props.store(new FileWriter(outFile),new Date().toString());
        } catch (IOException e) {
            LOGGER.error("Error while saving the properties to "+outFile.getAbsolutePath(), e);
        }
    }

    private boolean hasText(String str) {
        return str!=null && !str.isEmpty();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
 
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Editor dialog = new Editor(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRowButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JScrollPane commandTabSP;
    private org.atom.launcher.ui.Table commandTable;
    private javax.swing.JScrollPane pathTabScrollPane;
    private org.atom.launcher.ui.Table pathTable;
    private javax.swing.JButton saveButton;
    private javax.swing.JTabbedPane tabbledPane;
    // End of variables declaration//GEN-END:variables
}
